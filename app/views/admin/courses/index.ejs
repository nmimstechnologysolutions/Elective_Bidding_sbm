<%- include("../partials/head") %>
<%- include("../partials/leftSidebar") %>
<%- include("../partials/header") %>

<style>
    .file-drop-zone {
        width: 100%;
        height: 200px;
        border: 2px dashed #ccc;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        cursor: pointer;
        color: #666;
        transition: border-color 0.3s ease;
    }

    .file-drop-zone:hover {
        border-color: #666;
    }

    .file-drop-zone.dragover {
        border-color: #007bff;
        background-color: rgba(0, 123, 255, 0.1);
    }

    .remove-single{
        color : #000 !important;
        text-decoration: none !important;
    }

</style>

<div class="content">

    <div class="breadcrumbs-container">
        <ul class="breadcrumb">
            <% if(breadcrumbs){%> <% for (let crumbs of breadcrumbs){%>
                <li><a href="<%- crumbs.url%>"><%- crumbs.name%></a></li>
                <%} }%>
        </ul>
    </div>

    <div class="mb-4 d-flex justify-content-between align-items-center">
        <h1 class="page-title">Courses</h1>
        <div class="d-flex justify-content-between align-items-center gap-3">
            <button class="btn event-btn" id="delete-all-course-btn"  data-bs-toggle="modal" data-bs-target="#delete-all-courses-modal" disabled>Delete All Courses</button>
            <button class="btn event-btn" id="add-course-btn"  data-bs-toggle="modal" data-bs-target="#add-courses-modal">Add Courses</button>

        </div>
    </div>

    <div class="mb-3 row">
        <div class="col-lg-1 col-md-2">
            <select id="set-entries">   
                <%for(let page of locals.page_filter){%>
                    <option value="<%= page%>"><%= page%></option>
                <%}%>
            </select>
        </div>
        <div class="col-lg-5 col-md-10 ">
            <select id="set-program" placeholder="Select Program">   
                <option value="">Select Program</option>
                <% programList.forEach(program => { %>
                    <option value="<%= program.program_id %>"> <%= program.program_name%> </option>
                <% }) %>
            </select>
        </div>
        <div class="col-lg-2 col-md-6">
            <select id="set-session" placeholder="Select Acad Session">   
                <option value="">Select Acad Session</option>
            </select>
        </div>
        <div class="col-lg-4 col-md-6">
            <select id="set-courses" placeholder="Select Course">
                <option value="">Select Course</option>
            </select>
        </div>
    </div>

    <div class="card border-0 table-responsive">
        <table class="w-100">
            <thead>
                <tr class="table-head-row">
                    <th>
                        <% if(courseList.length > 0){ %>
                            <input type="checkbox" id="select-all-course-check" style="width: 16px; height: 16px;">
                        <% }else{ %>
                            #
                        <% } %>   
                    </th>
                    <th>Course Name</th>
                    <th>Credits</th>
                    <th>Program Id</th>
                    <th>Acad Session</th>
                    <th>Area</th>
                    <th>Year of Introduction</th>
                    <th>Minimum Demand Criteria</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="table-body">
                <% if(courseList.length > 0){ %>
                    <% courseList.forEach((course, idx) => { %>
                        <tr>
                            <td>
                                <div class="d-flex justify-content-center align-items-center">
                                    <span class="course-idx"><%= (idx+1) %></span>
                                    <input type="checkbox" 
                                        class="select-course-check d-none" 
                                        style="width: 16px; height: 16px;"
                                        data-course-id="<%= course.id %>"
                                    >
                                </div>
                            </td>
                            <td><%= course.course_name %></td>
                            <td><%= course.credits %></td>
                            <td><%= course.program_id %></td>
                            <td><%= course.acad_session %></td>
                            <td><%= course.area_name %></td>
                            <td><%= course.year_of_introduction %></td>
                            <td><%= course.min_demand_criteria %></td>
                            <td>
                                <div class="d-flex justify-content-center align-items-center gap-3">
                                    <button class="border-0 bg-transparent" 
                                        data-course-id="<%= course.id %>" 
                                        data-course-name="<%= course.course_name %>" 
                                        data-course-credits="<%= course.credits %>" 
                                        data-year-of-introduction="<%= course.year_of_introduction %>"
                                        data-min-demand-criteria="<%= course.min_demand_criteria %>"
                                        data-bs-toggle="modal" data-bs-target="#edit-course-modal" >
                                        <i class="fa fa-pencil-alt" style="font-size: 18px; color: green;"></i>
                                    </button>
                                    <button class="border-0 bg-transparent " 
                                        data-course-id="<%= course.id %>" 
                                        data-course-name="<%= course.course_name %>"
                                        data-bs-toggle="modal" data-bs-target="#delete-course-modal">
                                        <i class="fa fa-trash-alt" style="font-size: 18px; color: red;"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                <% }else{ %>
                    <tr>
                        <td colspan="9">No Course Data</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <div class="mt-4 w-100 d-flex justify-content-between align-items-center">
        <% if(courseList.length > 0){ %>
            <div>
                <p>Total entries : <span id="page-no"> <%- courseListCount %> </span></p>
            </div>
            <div>
                <p id="pagination" class="pagination-search"></p>
            </div>
        <% } %>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="add-courses-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Add Courses</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="mb-3">
                        <span>Download sample data : <a href="/admin/courses/get-sample-course-excel" download="SampleCourses.xlsx" class="" style="color: #DC2626;">Sample for Courses</a></span>
                    </div>
                    <div id="file-drop-zone" class="file-drop-zone">
                        <p>Drop your file here, or click to select</p>
                        <input type="file" id="file-input" style="display: none;"  accept=".xls,.xlsx,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"/>
                    </div>
                    <div id="file-info" class="w-100 mt-3 p-2 d-none justify-content-between align-items-center border rounded" >
                        <p class="m-0" id="file-name"></p>
                        <button class="btn btn-close" id="remove-btn"></button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn event-btn" id="save-courses-btn">Add</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="delete-all-courses-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete All Courses</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <p class="fs-6 mb-0">Are you sure want to Delete All Courses Data?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn event-btn" id="confirm-delete-all-course-btn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="delete-course-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Course</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <p class="fs-6 mb-2">Are you sure want to  Delete Course?</p>
                    <p class="fs-5 mb-0" id="delete-course-name" style="font-weight: 500;"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn event-btn" id="confirm-delete-course-btn">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="edit-course-modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Edit Course</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="d-flex flex-column gap-1 mb-2">
                        <label class="modal-label" >Course Name</label>
                        <input type="text" class="modal-input" id="update-course-name" placeholder="Enter Course Name">
                    </div>
                    <div class="d-flex flex-column gap-1 mb-2">
                        <label class="modal-label">Year of Introduction</label>
                        <input type="number" class="modal-input" id="update-year-of-introduction" placeholder="Enter Year of Introduction">
                    </div>
                    <div class="row">
                        <div class="col-md-6 col-12 d-flex flex-column gap-1">
                            <label class="modal-label">Credits</label>
                            <input type="number" class="modal-input" id="update-course-credits" placeholder="Enter Course Credits">
                        </div>
                        <div class="mt-2 mt-md-0 col-md-6 col-12 d-flex flex-column gap-1">
                            <label class="modal-label">Minimum Demand Criteria</label>
                            <input type="number" class="modal-input" id="update-course-min-demand-criteria" placeholder="Enter Demand Criteria">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn event-btn" id="confirm-save-course-btn">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<%- include("../partials/footer") %>
<script>

    setActiveMenuItem(`<%- active %>`)

    $("#set-entries").selectize()
    
    $("#set-program").selectize({
        plugins: ["remove_button"],
    })
    
    $("#set-session").selectize({
        plugins: ["remove_button"],
    })

    $("#set-courses").selectize({
        plugins: ["remove_button"],
    })
    
    $("#set-year-of-introduction").selectize()

    const courseListEntries = $("#set-entries")[0].selectize
    const programSelect = $("#set-program")[0].selectize
    const acadSessionSelect = $("#set-session")[0].selectize
    const courseSelect = $("#set-courses")[0].selectize

    const courseListCount = `<%- courseListCount %>`

    const deleteCourseList = []

    paginationData(courseListEntries.items[0], parseInt(courseListCount))

    var $fileDropZone = $('#file-drop-zone');
    var $fileInput = $('#file-input');
    var $fileInfo = $('#file-info');
    var $fileName = $('#file-name');
    var $removeFile = $('#remove-btn');
    var selectedFile = null; // Store the selected file

    // Trigger file input when div is clicked
    $fileDropZone.on('click', function(e) {
        if (e.target !== $fileInput[0]) {  // Check to ensure it's not the file input itself
            $fileInput.trigger('click');
        }
    });

    // Handle file selection through input
    $fileInput.on('change', function(e) {
        handleFiles(e.target.files);
    });

    // Handle drag and drop
    $fileDropZone.on('dragover', function(e) {
        e.preventDefault();
        $fileDropZone.addClass('dragover');
    });

    $fileDropZone.on('dragleave', function() {
        $fileDropZone.removeClass('dragover');
    });

    $fileDropZone.on('drop', function(e) {
        e.preventDefault();
        $fileDropZone.removeClass('dragover');
        var files = e.originalEvent.dataTransfer.files;
        handleFiles(files);
    });

    // Handle files (only 1 file allowed)
    function handleFiles(files) {
        if (files.length > 0) {
            selectedFile = files[0]; // Select the first file
            console.log('File dropped or selected:', selectedFile);
            displayFile(selectedFile.name); // Display the file name
        }
    }

    // Display the selected file and show remove button
    function displayFile(fileName) {
        $fileName.text(fileName);   // Set the file name in the UI
        $fileInfo.removeClass('d-none'); // Remove d-none to make the file info visible
        $fileInfo.addClass('d-flex')
        $fileDropZone.hide();       // Hide the drop zone
    }

    // Remove the selected file
    $removeFile.on('click', function() {
        clearFileSelection();
    });

    // Clear the file selection
    function clearFileSelection() {
        $fileInput.val('');         // Clear the file input
        $fileInfo.addClass('d-none'); // Hide file info section by adding d-none
        $fileName.text('');         // Clear the file name
        selectedFile = null;        // Reset selected file
        $fileDropZone.show();       // Show the drop zone again
    }

    $("#select-all-course-check").on("change", function(){
        const isChecked = $(this).is(":checked")

        if(isChecked){

            $("#delete-all-course-btn").attr("disabled", false)

            $(".table-body tr").each(function(){
                const row = $(this)
                const checkbox = row.find(".select-course-check")
                const courseId = checkbox.data("course-id")

                row.find(".course-idx").addClass("d-none")
                checkbox.removeClass("d-none").prop("checked", true)

                if(!deleteCourseList.includes(courseId)){
                    deleteCourseList.push(courseId)
                }
            })
            // console.log("Selected IDs after selecting all: ", deleteCourseList)
        }else{
            $("#delete-all-course-btn").attr("disabled", true)

            $(".table-body tr").each(function(){
                const row = $(this)
                const checkbox = row.find(".select-course-check")

                row.find(".course-idx").removeClass("d-none")
                checkbox.addClass("d-none").prop("checked", false)

            })
            deleteCourseList.length = 0
            // console.log("Selected IDs cleared: ", deleteCourseList)
        }
    })

    $(".table-body").on("change", ".select-course-check", function(){
        const checkbox = $(this)
        const courseId = checkbox.data("course-id")

        if(checkbox.is(":checked")){
            if(!deleteCourseList.includes(courseId)){
                deleteCourseList.push(courseId)
            }
        }else{
            const index = deleteCourseList.indexOf(courseId)
            if(index > -1){
                deleteCourseList.splice(index, 1)
            }
        }
        // console.log("Updated Selected IDs: ", deleteCourseList);

    })


    $("#confirm-delete-all-course-btn").on("click", function(){
        if(deleteCourseList.length > 0){
            const courseList = deleteCourseList.map(courseId => courseData = {id : parseInt(courseId)})
            // console.log(courseList)
            let ApiObj = {
                type : "POST",
                url : "/admin/courses/delete-all-course",
                data : {
                    courseList
                },
                datatype : JSON
            }

            ajaxApi(ApiObj).then(result => {
                // console.log(result)
                
                $("#delete-all-courses-modal").modal("hide")
                toast.success(result.description)

                setTimeout(()=>{
                    location.reload()
                },[3000])

            }).catch(err => {
                toast.error(err.responseJSON.description)
            })
        }
    })

    $("#save-courses-btn").on("click", function(){
        if(!selectedFile){
            alert("Please select file first")
            return
        }

        const formData = new FormData()
        formData.append('excel-file', selectedFile)

        

        $.ajax({
            url: '/admin/courses/add-course', 
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (result) {
                // alert('File uploaded successfully!')
                console.log(result)
                $("#add-courses-modal").modal("hide")
                clearFileSelection()
                setTimeout(function(){
                    location.reload()
                }, 3000)

                toast.success(result.description)
                setTimeout(function(){
                }, 1000)
                
            },
            error: function (xhr, status, error) {
                // console.log(xhr.responseJSON.description)
                toast.error(xhr.responseJSON.description)
                
            }
        })

    })

    $("#edit-course-modal").on('show.bs.modal', function(event){
        const btn = event.relatedTarget
        const courseId = btn.getAttribute("data-course-id")
        const courseName = btn.getAttribute("data-course-name")
        const courseYearOfIntroduction = btn.getAttribute("data-course-credits")
        const courseCredits = btn.getAttribute("data-year-of-introduction")
        const courseMinDemand = btn.getAttribute("data-min-demand-criteria")
        $("#update-course-name").val(courseName) 
        $("#update-year-of-introduction").val(courseYearOfIntroduction)
        $("#update-course-credits").val(courseYearOfIntroduction)
        $("#update-course-min-demand-criteria").val(courseMinDemand)
        $("#confirm-save-course-btn").attr('data-course-id', courseId)
    })

    $("#delete-course-modal").on('show.bs.modal', function(event){
        const btn = event.relatedTarget
        const courseId = btn.getAttribute("data-course-id")
        const courseName = btn.getAttribute("data-course-name")
        $("#delete-course-name").text(courseName)
        $("#confirm-delete-course-btn").attr('data-course-id', courseId)
    })
    

    courseListEntries.on("change", function(){
        courseSelect.setValue(-1)
        applyFilterByEntriesCount()
    })

    programSelect.on("change", function(){
        acadSessionSelect.setValue(-1)
        courseSelect.setValue(-1)

        const programId = programSelect.items[0]
        
        if(programId == undefined){
            acadSessionSelect.clearOptions()
            courseSelect.clearOptions()
            applyFilterByEntriesCount()
        }else{
            applyFilterByProgramId()
        }

    })

    
    acadSessionSelect.on("change", function(){
        
        courseSelect.setValue(-1)

        const acadSessionId = acadSessionSelect.items[0]

        if(acadSessionId == undefined){
            applyFilterByProgramId()
        }else{
            applyFilterByAcadSessionId()
        }

    })
    
    courseSelect.on("change", function(){
        const courseId = courseSelect.items[0]

        if(courseId == undefined){
            applyFilterByAcadSessionId()
        }else{
            applyFilterByCourseId()
        }
    })

    $("#confirm-save-course-btn").on("click", function(){
        const courseId = $(this).attr("data-course-id")
        const courseName = $("#update-course-name").val()
        const courseYearOfIntroduction = $("#update-year-of-introduction").val()
        const courseCredits = $("#update-course-credits").val()
        const courseMinDemand = $("#update-course-min-demand-criteria").val()

        const inputJSON = {
            id : courseId,
            course_name : courseName,
            credits : courseCredits,
            year_of_introduction : courseYearOfIntroduction,
            min_demand_criteria : courseMinDemand
        }

        // console.log(inputJSON)

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/update-course",
            data : {
                inputJSON : JSON.stringify(inputJSON)
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            toast.sucess(result.responseJSON.description)
            $("#edit-course-modal").modal('hide')
        }).catch(err => {
            toast.error(err.responseJSON.description)
        })
    })

    $("#confirm-delete-course-btn").on("click", function(){
        const courseId = $(this).attr("data-course-id")
        
        let ApiObj = {
            type : "POST",
            url : "/admin/courses/delete-course",
            data : {
                courseId : courseId
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            toast.sucess(result.responseJSON.description)
        }).catch(err => {
            toast.error(err.responseJSON.description)
        })
        
        $("#delete-course-modal").modal('hide')
    })


    function applyFilterByEntriesCount(){
        let showEntry  = courseListEntries.items[0] || -1
        let program = programSelect.items[0] || -1
        let acadSession = acadSessionSelect.items[0] || -1

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/show-entries",
            data : {
                showEntry : showEntry,
                programId : program,
                acadSessionId : acadSession
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            // console.log(result)
            renderCourseListTable(result.courses)
            paginationData(showEntry, result.entries)
            // console.log(result.courses)
        }).catch(err => {
            console.log(err.responseJSON.description)
        })
    }

    function applyFilterByProgramId(){
        const programId = programSelect.items[0]
        const courseEntries = courseListEntries.items[0]

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/courses-by-program",
            data : {
                programId : programId,
                entriesCount : courseEntries
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result=> {
            // console.log(result)
            renderCourseListTable(result.courseListByProgramId)
            addAcadSessionsList(result.acadSessionListByProgramId)
            paginationData(courseEntries, result.courseListByProgramIdCount)
            $("#page-no").text(result.courseListByProgramIdCount)
        }).catch(err => {
            console.log(err.responseJSON.description)
        })
    }

    function applyFilterByAcadSessionId(){
        const programId = programSelect.items[0]
        const acadSessionId = acadSessionSelect.items[0]
        // let course =  courseSelect.items[0]
        const courseEntries = courseListEntries.items[0] 

        // console.log(programId, acadSessionId, courseEntries)

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/courses-by-acad-session",
            data : {
                programId : programId,
                sessionId : acadSessionId,
                entriesCount : courseEntries
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            // console.log(result)
            renderCourseListTable(result.courseListByAcadSessionId)
            addCourseOptionList(result.courseListForOptionByAcadSessionId)
            paginationData(courseEntries, result.courseListByAcadSessionIdCount)
            $("#page-no").text(result.courseListByAcadSessionIdCount)
        }).catch(err => {
            console.log(err.responseJSON.description)
        })
    }

    function applyFilterByCourseId(){
        const programId = programSelect.items[0]
        const acadSessionId = acadSessionSelect.items[0]
        const courseId = courseSelect.items[0]
        const courseEntries = courseListEntries.items[0] 

        
        // console.log(programId, acadSessionId, courseId, courseEntries)

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/courses-by-course",
            data : {
                programId : programId,
                acadSessionId : acadSessionId,
                courseId : courseId,
                entriesCount : courseEntries
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            // console.log(result)
            renderCourseListTable(result.courseListByCourseId)
            paginationData(courseEntries, result.courseListByCourseIdCount)
            $("#page-no").text(result.courseListByCourseIdCount)
        }).catch(err => {
            console.log(err.responseJSON.description)
        })
    }

    function addAcadSessionsList(acadSessionList){
        
        acadSessionSelect.clearOptions()

        // acadSessionSelect.addOption({ value: "-1", text: "Select Acad Session", disabled: true })
        
        if (acadSessionList.length > 0) {
            acadSessionList.forEach(acadSession => {
                acadSessionSelect.addOption({
                    value: acadSession.sap_acad_session_id,
                    text: `${acadSession.acad_session}`
                })
            })
        } else {
            acadSessionSelect.addOption({ value: "", text: "No Acad Session", disabled: true })
        }

        acadSessionSelect.refreshOptions(false)
    }

    function addCourseOptionList(courseOptionsList){
        courseSelect.clearOptions()

        if(courseOptionsList.length > 0){
            courseOptionsList.forEach(course => {
                courseSelect.addOption({
                    value : course.course_id,
                    text : `${course.course_name}`
                })
            })
        }else{
            courseSelect.addOption({ value: "", text: "No Course", disabled: true})
        }

        courseSelect.refreshOptions(false)
    }

    function fetchPaginatedData(pageNo){
        let entriesCount = courseListEntries.items[0] || 10
        let programId = programSelect.items[0] || -1
        let acadSessionId = acadSessionSelect.items[0] || -1
        // console.log(pageNo, entriesCount, programId, acadSessionId)

        let ApiObj = {
            type : "POST",
            url : "/admin/courses/course-by-pages",
            data : {
                pageNo : pageNo,
                programId : programId,
                acadSessionId : acadSessionId,
                letterSearch : "",
                entriesCount : entriesCount
            },
            datatype : JSON
        }

        ajaxApi(ApiObj).then(result => {
            renderCourseListTable(result)
        }).catch(err => {
            console.log(err.responseJSON.description)
        })
    }

    function renderCourseListTable(courseList){
        $(".table-body").empty();
        let courseTable = ``;

        $("#select-all-course-check").prop("checked", false)
        $("#delete-all-course-btn").attr("disabled", true)
        deleteCourseList.length = 0

        if (courseList.length > 0) {
            let idx = 1;
            for (let course of courseList) {
                // Append each course row to courseTable
                courseTable += `
                    <tr>
                        <td>
                            <div class="d-flex justify-content-center align-items-center">
                            <span class="course-idx">${idx++}</span>
                            <input type="checkbox" 
                                class="select-course-check d-none" 
                                style="width: 16px; height: 16px;"
                                data-course-id = "${course.id}"
                            >
                            </div>
                        </td>
                        <td>${course.course_name}</td>
                        <td>${course.credits}</td>
                        <td>${course.program_id}</td>
                        <td>${course.acad_session}</td>
                        <td>${course.area_name}</td>
                        <td>${course.year_of_introduction}</td>
                        <td>${course.min_demand_criteria}</td>
                        <td>
                            <div class="d-flex justify-content-center align-items-center gap-3">
                                <button class="border-0 bg-transparent" 
                                    data-course-id="${course.id}" 
                                    data-course-name="${course.course_name}"
                                    data-course-credits="${course.credits}"
                                    data-year-of-introduction="${course.year_of_introduction}"
                                    data-min-demand-criteria="${course.min_demand_criteria}"
                                    data-bs-toggle="modal" data-bs-target="#edit-course-modal"
                                >
                                    <i class="fa fa-pencil-alt" style="font-size: 18px; color: green;"></i>
                                </button>
                                <button class="border-0 bg-transparent" 
                                    data-course-id="${course.id}" 
                                    data-course-name="${course.course_name}"
                                    data-bs-toggle="modal" data-bs-target="#delete-course-modal">
                                    <i class="fa fa-trash-alt" style="font-size: 18px; color: red;"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            }
        }else {
            courseTable += `
                <tr>
                    <td colspan="9">No Course Data</td>
                </tr>
            `
        }

        $(".table-body").html(courseTable)  
    }


    function paginationData(rowCount, totalCount){ 
        let pageNos = Math.ceil(Number(totalCount) / Number(rowCount))
        // console.log("Page Numbers", pageNos)
        $('#pagination').bootpag({
            total: pageNos,
            page: 1,
            maxVisible: 10,
            leaps: true,
            firstLastUse: true,
            first: '←',
            last: '→',
            wrapClass: 'pagination',
            activeClass: 'active', 
            disabledClass: 'disabled',
            nextClass: 'next',
            prevClass: 'prev',
            lastClass: 'last',
            firstClass: 'first'
        }).on("page", function (event, num) {
            // console.log('pagination here!!')
            fetchPaginatedData(num)
        })
    }

</script>
<%- include("../partials/footerEnd") %>
